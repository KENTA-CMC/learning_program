{
  "name": "streamlit-lab",
  "image": "mcr.microsoft.com/devcontainers/python:3.11",

  "features": {
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11",
      "installTools": true,
      "uv": "latest" // この設定がuvをインストールし、venvも作成することを期待する
    }
  },

  "postCreateCommand": [
    // Python Featureが自動的にvenvを作成し、uvを使って依存関係をインストールすることを期待する
    // もしそれでもうまくいかない場合は、featuresの自動機能に問題がある
    // 最低限の確認メッセージのみ残す
    "echo \"Codespace setup complete. Attempting to activate and install requirements.\"",
    // Python Featureが自動的にvenvを作成した場合、そのアクティベーションスクリプトがどこかにあるはず
    // ここでは、デフォルトのvenv名(.venv)を仮定し、requirements.txtをインストール
    // featureが自動的にvenvをアクティベートしない場合があるので、明示的にuvを使ってインストールを試みる
    "if [ -f \"./.venv/bin/uv\" ]; then",
    "  echo \"Found uv in .venv/bin. Installing requirements.\"",
    "  ./.venv/bin/uv pip install -r ./.devcontainer/requirements.txt",
    "else",
    "  echo \"uv not found in ./.venv/bin. Attempting to use global uv if installed by feature.\"",
    "  which uv && uv pip install -r ./.devcontainer/requirements.txt || echo \"Error: uv not found or failed to install requirements.\"",
    "fi",
    "echo \"Setup scripts completed.\"",
    "ls -lF ./.venv/bin" // 最終的な確認
  ],

  "remoteEnv": {
    // PATH設定はそのまま維持。これが最終的なシェル環境に影響する。
    "PATH": "${containerWorkspaceFolder}/.venv/bin:$HOME/.local/bin:${containerEnv:PATH}"
  },

  "forwardPorts": [8501],

  "customizations": {
    "vscode": {
      "extensions": ["ms-python.python", "ms-python.vscode-pylance"],
      "settings": {
        "python.pythonPath": "${containerWorkspaceFolder}/.venv/bin/python"
      }
    }
  }
}
